generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

model Account {
  id                 String  @id @default(cuid())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?  
  access_token       String?  
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?  
  session_state      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
 portfolio       Portfolio?
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model GeckoCoinID {
  id         String          @id
  symbol     String
  name       String
  web_slug   String?
  description Json?
  image       Json?
  market_cap_rank                    Int?
  market_data                        Json?
  community_data                     Json?
  developer_data                     Json?
  last_updated                       DateTime?
  tickers                            Json?
  portfolios      Portfolio[] @relation("PortfolioGeckoCoins")
}

model Portfolio {
  id         String       @id @default(cuid())
  userId     String       @unique
  user       User         @relation(fields: [userId], references: [id])
  geckoCoins GeckoCoinID[] @relation("PortfolioGeckoCoins") 
}