generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

model Account {
  id                 String  @id @default(cuid())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?  
  access_token       String?  
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?  
  session_state      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Cryptocurrency {
  id                     Int      @id
  name                   String
  symbol                 String
  slug                   String
  cmcRank                Int      @map("cmc_rank")
  numMarketPairs         Int      @map("num_market_pairs")
  circulatingSupply      Float    @map("circulating_supply")
  totalSupply            Float    @map("total_supply")
  maxSupply              Float?   @map("max_supply")
  infiniteSupply         Boolean  @map("infinite_supply")
  lastUpdated            DateTime @map("last_updated")
  dateAdded              DateTime @map("date_added")
  tags                   String[]
  tokenAddress               String?  @map("token_address") 
  selfReportedCirculatingSupply Float? @map("self_reported_circulating_supply")
  selfReportedMarketCap  Float?  @map("self_reported_market_cap")
  price                  Float
  volume24h              Float    @map("volume_24h")
  volumeChange24h        Float    @map("volume_change_24h")
  percentChange1h        Float    @map("percent_change_1h")
  percentChange24h       Float    @map("percent_change_24h")
  percentChange7d        Float    @map("percent_change_7d")
  marketCap              Float    @map("market_cap")
  marketCapDominance     Float    @map("market_cap_dominance")
  fullyDilutedMarketCap  Float    @map("fully_diluted_market_cap")

  @@map("cryptocurrencies")
}